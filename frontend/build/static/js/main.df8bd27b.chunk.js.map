{"version":3,"sources":["components/sales/Header.js","components/sales/SubHeader.js","components/sales/Content.js","components/sales/OrderButton.js","components/sales/HowItWorks.js","containers/Landing.js","routes.js","containers/LoginButton.js","containers/NavBar.js","containers/Layout.js","App.js","serviceWorker.js","index.js","images/lrc-color.png"],"names":["StyledCard","withStyles","root","background","opacity","borderRadius","border","color","height","maxWidth","minWidth","padding","boxShadow","Card","HeaderLeft","react_default","a","createElement","className","CardText","CardContent","SubHeader","SubHeader_StyledCard","Content","Button","sales_SubHeader","Landing","Fragment","sales_Content","BaseRouter","react_router","exact","path","component","LoginButton","Button_default","flexGrow","grow","menuButton","marginLeft","marginRight","logo","maxHeight","props","classes","AppBar_default","position","Toolbar_default","IconButton_default","aria-label","Menu_default","Typography_default","variant","src","alt","containers_LoginButton","Layout","containers_NavBar","Header","children","App","react_router_dom","containers_Layout","this","routes","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.df8bd27b.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport Card from '@material-ui/core/Card';\n\nconst StyledCard = withStyles({\n  root: {\n    background: '#e6b5da',\n    opacity: 0.5,\n    borderRadius: 3,\n    border: 0,\n    color: 'black',\n    height: '55vh',\n    maxWidth: '55vh',\n    minWidth: '50vh',\n    padding: '0 30px',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  },\n})(Card);\n\nconst HeaderLeft = () => {\n  return(\n    <div className=\"header-box\">\n      <StyledCard>\n        <h1>\n          Discover gourmet coffee in the comfort of your home.\n        </h1>\n        <h4>\n          Now your new favorite coffee is just a click away.\n        </h4>\n      </StyledCard>\n      <StyledCard>\n      Not sure where to start? Start with a sampler of our favorites:\n      </StyledCard>\n    </div>\n  )\n};\n\nexport default HeaderLeft;\n","import React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nconst StyledCard = withStyles({\n  root: {\n    background: '#FFF',\n    borderRadius: 3,\n    border: 0,\n    color: 'black',\n    height: '20vh',\n    maxWidth: '30vh',\n    minWidth: '30vh',\n    padding: '0 30px',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  },\n})(Card);\n\nconst CardText = withStyles({\n  root: {\n    height: '20vh',\n    maxWidth: '30vh',\n  }\n})(CardContent)\n\n\n\nconst SubHeader = () => {\n  return(\n    <div className=\"subheader\">\n      <StyledCard>\n        <CardText>\n          <h3>\n            Expand your palette and discover new roasts each month\n          </h3>\n        </CardText>\n      </StyledCard>\n\n      <StyledCard>\n        <CardText>\n          <h3>\n            Free up time from traffic and crowded grocery stores\n          </h3>\n        </CardText>\n      </StyledCard>\n\n      <StyledCard>\n        <CardText>\n          <h3>\n            Enjoy premium flavors while supporting your local businesses\n          </h3>\n        </CardText>\n      </StyledCard>\n    </div>\n  )\n}\n\nexport default SubHeader;","import React from 'react';\nimport './content.css'\nimport SubHeader from './SubHeader';\nimport Paragraph1 from './Paragraph1';\nimport HowItWorks from './HowItWorks';\nimport CopyP2 from './CopyP2';\n\n\nconst Content = () => {\n  return (\n    <div className=\"content\">\n      <SubHeader />\n    </div>\n  )\n}\n\nexport default Content;\n\n{/* <Grid item={true} xs={12}>  \n<SubHeader />\n</Grid>\n<Grid item={true} xs={12}>\n<Paragraph1 />\n</Grid>\n<Grid item={true} xs={12}>\n<HowItWorks />\n</Grid>\n<Grid item={true} xs={12}>\n<CopyP2 />\n</Grid> */}\n\n// moving this stuff  over for now","import React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\n\n\nconst OrderBtn = withStyles({\n  root: {\n    background: 'linear-gradient(30deg, #e6b5da 50%, #f5f733 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'black',\n    height: 48,\n    padding: '0 30px',\n  },\n})(Button);\n\nconst OrderButton = () => {\n  return(\n    <OrderBtn>Join the Club</OrderBtn>\n  ) \n}\n\nexport default OrderButton;","import React from 'react';\nimport { withStyles } from '@material-ui/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nconst StyledCard = withStyles({\n  root: {\n    background: '#FFF',\n    borderRadius: 3,\n    border: 0,\n    color: 'black',\n    height: '20vh',\n    maxWidth: '30vh',\n    minWidth: '30vh',\n    padding: '0 30px',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  },\n})(Card);\n\nconst CardText = withStyles({\n  root: {\n    height: '20vh',\n    maxWidth: '30vh',\n  }\n})(CardContent)\n\n\n\nconst HowItWorks = () => {\n  return(\n    <Grid\n      container={true}\n      alignItems=\"center\"\n      justify=\"center\"\n    >\n      \n      <Grid container={true} justify=\"center\" alignItems=\"center\">\n        <h2>\n          How It Works\n        </h2>\n      </Grid>\n      <Grid \n        container={true}\n        justify=\"center\"\n        alignItems=\"center\"\n        spacing={40}\n      >\n        <Grid item>\n          <StyledCard>\n            <CardText>\n              <h3>\n                Expand your palette and discover new roasts each month\n              </h3>\n            </CardText>\n          </StyledCard>\n        </Grid>\n        <Grid item={true}>\n          <StyledCard>\n            <CardText>\n              <h3>\n                Free up time from traffic and crowded grocery stores\n              </h3>\n            </CardText>\n          </StyledCard>\n        </Grid>\n        <Grid item={true}>\n          <StyledCard>\n            <CardText>\n              <h3>\n                Enjoy premium flavors while supporting your local businesses\n              </h3>\n            </CardText>\n          </StyledCard>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default HowItWorks;","//add all the components from ./components/sales here\n\nimport React from 'react';\n\nimport Header from '../components/sales/Header'\nimport Content from '../components/sales/Content'\n\n\nconst Landing = () => {\n  return (\n    <>\n      <Content />\n    </>\n  )\n}\n\nexport default Landing;","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport Landing from './containers/Landing'\n// import Login from './containers/Login';\n// import Signup from './containers/Signup';\n\nconst BaseRouter = () => (\n  <div>\n    <Route exact path=\"/\" component={Landing} />\n    {/* <Route exact path=\"/login\" component={Login} />\n    <Route exact path=\"/signup\" component={Signup} /> */}\n  </div>\n);\n\nexport default BaseRouter;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nconst LoginButton = () => {\n  return (\n    <Button color=\"inherit\">Login</Button>\n  )\n};\n\nexport default LoginButton;","import React from 'react';\nimport LoginButton from './LoginButton';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport logo from '../images/lrc-color.png';\n\n\nconst styles = {\n  root: {\n    background: 'black',\n    height: '12vh',\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n  logo: {\n    maxHeight: '10vh',\n    maxWidth: '10vh',\n    flexGrow: 1,\n  }\n};\n\nfunction NavBar(props) {\n  const { classes } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.root}>\n        <Toolbar>\n          <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n            <img className={classes.logo} src={logo} alt=\"Local Roast Club\"/>\n          </Typography>\n          <LoginButton />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nNavBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(NavBar);\n","import React from 'react';\n\nimport Header from '../components/sales/Header';\nimport NavBar from './NavBar';\n\n\nfunction Layout(props) {\n  return (\n    <div className=\"page\">\n      <NavBar />\n      <Header />\n      {props.children}\n    </div>\n  );\n}\n\nexport default Layout;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport BaseRouter from './routes';\nimport Layout from './containers/Layout';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Router>\n        <Layout {...this.props} >\n          <BaseRouter />\n        </Layout>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/lrc-color.dc776fd0.png\";"],"sourceRoot":""}